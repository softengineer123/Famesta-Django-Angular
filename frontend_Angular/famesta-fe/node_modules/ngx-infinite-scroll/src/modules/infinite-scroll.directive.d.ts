import { AfterViewInit, ElementRef, EventEmitter, NgZone, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import { IInfiniteScrollEvent, IInfiniteScrollAction } from '../models';
import * as ɵngcc0 from '@angular/core';
export declare class InfiniteScrollDirective implements OnDestroy, OnChanges, AfterViewInit {
    private element;
    private zone;
    scrolled: EventEmitter<IInfiniteScrollEvent>;
    scrolledUp: EventEmitter<IInfiniteScrollEvent>;
    infiniteScrollDistance: number;
    infiniteScrollUpDistance: number;
    infiniteScrollThrottle: number;
    infiniteScrollDisabled: boolean;
    infiniteScrollContainer: any;
    scrollWindow: boolean;
    immediateCheck: boolean;
    horizontal: boolean;
    alwaysCallback: boolean;
    fromRoot: boolean;
    private disposeScroller;
    constructor(element: ElementRef, zone: NgZone);
    ngAfterViewInit(): void;
    ngOnChanges({ infiniteScrollContainer, infiniteScrollDisabled, infiniteScrollDistance }: SimpleChanges): void;
    setup(): void;
    handleOnScroll({ type, payload }: IInfiniteScrollAction): void;
    ngOnDestroy(): void;
    destroyScroller(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<InfiniteScrollDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<InfiniteScrollDirective, "[infiniteScroll], [infinite-scroll], [data-infinite-scroll]", never, { "infiniteScrollDistance": "infiniteScrollDistance"; "infiniteScrollUpDistance": "infiniteScrollUpDistance"; "infiniteScrollThrottle": "infiniteScrollThrottle"; "infiniteScrollDisabled": "infiniteScrollDisabled"; "infiniteScrollContainer": "infiniteScrollContainer"; "scrollWindow": "scrollWindow"; "immediateCheck": "immediateCheck"; "horizontal": "horizontal"; "alwaysCallback": "alwaysCallback"; "fromRoot": "fromRoot"; }, { "scrolled": "scrolled"; "scrolledUp": "scrolledUp"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5maW5pdGUtc2Nyb2xsLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJpbmZpbml0ZS1zY3JvbGwuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgTmdab25lLCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSUluZmluaXRlU2Nyb2xsRXZlbnQsIElJbmZpbml0ZVNjcm9sbEFjdGlvbiB9IGZyb20gJy4uL21vZGVscyc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBJbmZpbml0ZVNjcm9sbERpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uRGVzdHJveSwgT25DaGFuZ2VzLCBBZnRlclZpZXdJbml0IHtcbiAgICBwcml2YXRlIGVsZW1lbnQ7XG4gICAgcHJpdmF0ZSB6b25lO1xuICAgIHNjcm9sbGVkOiBFdmVudEVtaXR0ZXI8SUluZmluaXRlU2Nyb2xsRXZlbnQ+O1xuICAgIHNjcm9sbGVkVXA6IEV2ZW50RW1pdHRlcjxJSW5maW5pdGVTY3JvbGxFdmVudD47XG4gICAgaW5maW5pdGVTY3JvbGxEaXN0YW5jZTogbnVtYmVyO1xuICAgIGluZmluaXRlU2Nyb2xsVXBEaXN0YW5jZTogbnVtYmVyO1xuICAgIGluZmluaXRlU2Nyb2xsVGhyb3R0bGU6IG51bWJlcjtcbiAgICBpbmZpbml0ZVNjcm9sbERpc2FibGVkOiBib29sZWFuO1xuICAgIGluZmluaXRlU2Nyb2xsQ29udGFpbmVyOiBhbnk7XG4gICAgc2Nyb2xsV2luZG93OiBib29sZWFuO1xuICAgIGltbWVkaWF0ZUNoZWNrOiBib29sZWFuO1xuICAgIGhvcml6b250YWw6IGJvb2xlYW47XG4gICAgYWx3YXlzQ2FsbGJhY2s6IGJvb2xlYW47XG4gICAgZnJvbVJvb3Q6IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBkaXNwb3NlU2Nyb2xsZXI7XG4gICAgY29uc3RydWN0b3IoZWxlbWVudDogRWxlbWVudFJlZiwgem9uZTogTmdab25lKTtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICBuZ09uQ2hhbmdlcyh7IGluZmluaXRlU2Nyb2xsQ29udGFpbmVyLCBpbmZpbml0ZVNjcm9sbERpc2FibGVkLCBpbmZpbml0ZVNjcm9sbERpc3RhbmNlIH06IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xuICAgIHNldHVwKCk6IHZvaWQ7XG4gICAgaGFuZGxlT25TY3JvbGwoeyB0eXBlLCBwYXlsb2FkIH06IElJbmZpbml0ZVNjcm9sbEFjdGlvbik6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBkZXN0cm95U2Nyb2xsZXIoKTogdm9pZDtcbn1cbiJdfQ==